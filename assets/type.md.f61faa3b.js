import{_ as s,c as a,o as e,a as t}from"./app.2bddeac3.js";const F=JSON.parse('{"title":"Type","description":"","frontmatter":{},"headers":[{"level":2,"title":"cast()","slug":"cast","link":"#cast","children":[]}],"relativePath":"type.md"}'),n={name:"type.md"},o=t(`<h1 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#cast">cast()</a></li></ul></nav><h2 id="cast" tabindex="-1">cast() <a class="header-anchor" href="#cast" aria-hidden="true">#</a></h2><p>force cast an object to the given generic type <code>T</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">unknown</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">unknown</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ul><li><em><code>obj</code></em> : source.</li></ul>`,6),l=[o];function c(p,r,i,d,y,_){return e(),a("div",null,l)}const C=s(n,[["render",c]]);export{F as __pageData,C as default};
